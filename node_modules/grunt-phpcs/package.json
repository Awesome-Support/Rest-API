{
  "_args": [
    [
      {
        "raw": "grunt-phpcs@^0.4.0",
        "scope": null,
        "escapedName": "grunt-phpcs",
        "name": "grunt-phpcs",
        "rawSpec": "^0.4.0",
        "spec": ">=0.4.0 <0.5.0",
        "type": "range"
      },
      "/srv/www/rcp/htdocs/wp-content/plugins/rcp-avatax"
    ]
  ],
  "_from": "grunt-phpcs@>=0.4.0 <0.5.0",
  "_id": "grunt-phpcs@0.4.0",
  "_inCache": true,
  "_location": "/grunt-phpcs",
  "_nodeVersion": "0.10.36",
  "_npmUser": {
    "name": "xash",
    "email": "me@xash.at"
  },
  "_npmVersion": "2.3.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "grunt-phpcs@^0.4.0",
    "scope": null,
    "escapedName": "grunt-phpcs",
    "name": "grunt-phpcs",
    "rawSpec": "^0.4.0",
    "spec": ">=0.4.0 <0.5.0",
    "type": "range"
  },
  "_requiredBy": [
    "#DEV:/"
  ],
  "_resolved": "https://registry.npmjs.org/grunt-phpcs/-/grunt-phpcs-0.4.0.tgz",
  "_shasum": "a08d625fc64465e453b2bd93f810b2a81e94bdaa",
  "_shrinkwrap": null,
  "_spec": "grunt-phpcs@^0.4.0",
  "_where": "/srv/www/rcp/htdocs/wp-content/plugins/rcp-avatax",
  "author": {
    "name": "Sascha Galley",
    "email": "me@xash.at",
    "url": "http://xash.at/"
  },
  "bugs": {
    "url": "https://github.com/SaschaGalley/grunt-phpcs/issues"
  },
  "contributors": [
    {
      "name": "James Cryer",
      "email": "chat@jamescryer.com",
      "url": "http://www.jamescryer.com/"
    }
  ],
  "dependencies": {},
  "description": "Grunt plugin for running PHP Code Sniffer.",
  "devDependencies": {
    "grunt": "^0.4.5",
    "grunt-contrib-jshint": "^0.11.0"
  },
  "directories": {},
  "dist": {
    "shasum": "a08d625fc64465e453b2bd93f810b2a81e94bdaa",
    "tarball": "https://registry.npmjs.org/grunt-phpcs/-/grunt-phpcs-0.4.0.tgz"
  },
  "engines": {
    "node": "0.10.x"
  },
  "gitHead": "7cd55eefec9b2ced128e85b6b0d2a44818fadb13",
  "homepage": "https://github.com/SaschaGalley/grunt-phpcs",
  "keywords": [
    "gruntplugin",
    "phpcs"
  ],
  "main": "Gruntfile.js",
  "maintainers": [
    {
      "name": "xash",
      "email": "me@xash.at"
    }
  ],
  "name": "grunt-phpcs",
  "optionalDependencies": {},
  "readme": "# grunt-phpcs\n\n> Grunt plugin for running PHP Code Sniffer.\n\n_This plugin is developed for Grunt `0.4.0` and is not tested for backward compatibility with Grunt `0.3.x`._\n\n##Getting Started\n1. Install this grunt plugin with the following command:\n\n\t```shell\n\tnpm install grunt-phpcs --save-dev\n\t```\n\n2. Install [PHP Code Sniffer](https://github.com/squizlabs/PHP_CodeSniffer#installation) (preferably with [composer](https://github.com/composer/composer))\n\n3. Add this to your project's `Gruntfile.js` gruntfile:\n\n\t```js\n\tgrunt.loadNpmTasks('grunt-phpcs');\n\t```\n\n##PHP Code Sniffer task\n_Run this task with the `grunt phpcs` command._\n\nTask targets, files and options may be specified according to the grunt [Configuring tasks](http://gruntjs.com/configuring-tasks) guide.\n\n###Usage Example\n\n```js\nphpcs: {\n\tapplication: {\n\t\tsrc: ['application/classes/*.php', 'application/lib/**/*.php']\n\t},\n\toptions: {\n\t\tbin: 'vendor/bin/phpcs',\n\t\tstandard: 'Zend'\n\t}\n}\n```\n\n### Custom callback\n\nDo whatever you want with the output.\n\n```js\nfunction log(err, stdout, stderr, cb) {\n\tconsole.log(stdout);\n\tcb();\n}\ngrunt.initConfig({\n\tphpcs: {\n\t\tapplication: {\n\t\t\tsrc: ['application/classes/*.php', 'application/lib/**/*.php']\n\t\t},\n\t\toptions: {\n\t\t\tcallback: log\n\t\t}\n\t}\n});\n```\n\n###Options\n####bin\nType: `String`  Default: `'phpcs'`\n\n####maxBuffer\nType: `Number` Default: `200*1024`\n\nSet the buffer size.\n\n####verbose\nType: `Boolean` Default: `false`\n\nOutput more verbose information.\n\n####showSniffCodes\nType: `Boolean` Default: `false`\n\nShow sniff codes in all reports.\n\n####severity\nType: `Integer` Default: `false`\n\nThe minimum severity required to display an error or warning.\n\n####warningSeverity\nType: `Integer` Default: `false`\n\nThe minimum severity required to display a warning.\n\n####errorSeverity\nType: `Integer` Default: `false`\n\nThe minimum severity required to display an error.\n\n####standard\nType: `String`  Default: `false`\n\nDefine the standard to use.\n\n####report\nType: `String` Default: `false`\n\nReport types and options\n\n####reportFile\nType: `String` Default: `false`\n\nLog report to the file.\n\n####tabWidth\nType: `Integer` Default: `false`\n\nAutomatically convert tabs to the specified number of spaces when sniffing.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/SaschaGalley/grunt-phpcs.git"
  },
  "scripts": {
    "test": "grunt"
  },
  "version": "0.4.0"
}
